name: Generate Personalized Bootstrap

on:
  workflow_dispatch:
    inputs:
      branch_suffix:
        description: 'Suffix for personalized branch (optional)'
        required: false
        default: ''
        type: string
      cleanup_old_branches:
        description: 'Clean up old personalized branches'
        required: false
        default: true
        type: boolean
  schedule:
    # Run weekly on Sundays at midnight UTC to refresh personalized branch
    - cron: '0 0 * * 0'

env:
  PERSONALIZED_BRANCH_PREFIX: 'personalized'

jobs:
  generate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch operations
      
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Validate required secrets
        run: |
          if [ -z "${{ secrets.ISTAT_MENUS_LICENSE_EMAIL }}" ]; then
            echo "Error: ISTAT_MENUS_LICENSE_EMAIL secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.ISTAT_MENUS_LICENSE_SERIAL }}" ]; then
            echo "Error: ISTAT_MENUS_LICENSE_SERIAL secret is not set"
            exit 1
          fi
          echo "✓ Required secrets are configured"
      
      - name: Generate branch name
        id: branch_name
        run: |
          DATE_SUFFIX=$(date +%Y%m%d-%H%M)
          if [ -n "${{ github.event.inputs.branch_suffix }}" ]; then
            BRANCH_NAME="${{ env.PERSONALIZED_BRANCH_PREFIX }}-${{ github.event.inputs.branch_suffix }}-${DATE_SUFFIX}"
          else
            BRANCH_NAME="${{ env.PERSONALIZED_BRANCH_PREFIX }}-${DATE_SUFFIX}"
          fi
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          echo "Generated branch name: ${BRANCH_NAME}"
      
      - name: Clean up old personalized branches
        if: ${{ github.event.inputs.cleanup_old_branches == 'true' || github.event_name == 'schedule' }}
        run: |
          echo "Cleaning up old personalized branches..."
          
          # List all remote personalized branches older than 7 days
          OLD_BRANCHES=$(git branch -r --format='%(refname:short)' | grep "origin/${{ env.PERSONALIZED_BRANCH_PREFIX }}-" | head -20)
          
          for branch in $OLD_BRANCHES; do
            BRANCH_NAME=${branch#origin/}
            
            # Extract date from branch name (format: personalized-YYYYMMDD-HHMM)
            if [[ $BRANCH_NAME =~ ${{ env.PERSONALIZED_BRANCH_PREFIX }}-.*-([0-9]{8})-[0-9]{4}$ ]]; then
              BRANCH_DATE=${BASH_REMATCH[1]}
              CURRENT_DATE=$(date +%Y%m%d)
              
              # Calculate days difference
              DAYS_DIFF=$(( ($(date -d "$CURRENT_DATE" +%s) - $(date -d "$BRANCH_DATE" +%s)) / 86400 ))
              
              if [ $DAYS_DIFF -gt 7 ]; then
                echo "Deleting old branch: $BRANCH_NAME (${DAYS_DIFF} days old)"
                git push origin --delete "$BRANCH_NAME" || echo "Failed to delete $BRANCH_NAME"
              else
                echo "Keeping recent branch: $BRANCH_NAME (${DAYS_DIFF} days old)"
              fi
            fi
          done
      
      - name: Inject license into iStat Menus settings
        run: |
          echo "Injecting license information into iStat Menus settings..."
          
          # Verify input file exists
          if [ ! -f "preferences/istat-menus-settings.ismp" ]; then
            echo "Error: preferences/istat-menus-settings.ismp not found"
            exit 1
          fi
          
          # Create temporary directory for licensed file
          mkdir -p /tmp/personalized
          
          # Run license injection script
          python3 scripts/istat-menus-inject-license.py \
            --input "preferences/istat-menus-settings.ismp" \
            --output "/tmp/personalized/istat-menus-settings-licensed.ismp" \
            --email "${{ secrets.ISTAT_MENUS_LICENSE_EMAIL }}" \
            --serial "${{ secrets.ISTAT_MENUS_LICENSE_SERIAL }}" \
            --verbose
          
          # Verify output file was created
          if [ ! -f "/tmp/personalized/istat-menus-settings-licensed.ismp" ]; then
            echo "Error: Failed to create licensed settings file"
            exit 1
          fi
          
          echo "✓ License injection completed successfully"
      
      - name: Create personalized branch
        run: |
          BRANCH_NAME="${{ steps.branch_name.outputs.branch_name }}"
          
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Create and checkout new branch
          git checkout -b "$BRANCH_NAME"
          
          # Copy licensed file to preferences directory
          cp "/tmp/personalized/istat-menus-settings-licensed.ismp" "preferences/"
          
          # Add the licensed file
          git add "preferences/istat-menus-settings-licensed.ismp"
          
          # Create commit
          git commit -m "Add personalized iStat Menus settings with license
          
          This branch contains personalized settings with license information injected.
          Generated on: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          ⚠️  This branch contains sensitive license information and should be kept private.
          🗑️ This branch will be automatically cleaned up after 7 days."
          
          # Push to remote
          git push origin "$BRANCH_NAME"
          
          echo "✓ Created personalized branch: $BRANCH_NAME"
          
      - name: Generate usage instructions
        run: |
          BRANCH_NAME="${{ steps.branch_name.outputs.branch_name }}"
          REPO_URL="https://raw.githubusercontent.com/${{ github.repository }}/${BRANCH_NAME}"
          
          echo "
          ## 🎉 Personalized Bootstrap Generated!
          
          Your personalized bootstrap with iStat Menus license has been created.
          
          ### 📋 Usage Instructions:
          
          **Complete Bootstrap (recommended):**
          \`\`\`bash
          curl -fsSL ${REPO_URL}/osx-bootstrap.sh | bash
          \`\`\`
          
          **Just macOS Preferences:**
          \`\`\`bash
          curl -fsSL ${REPO_URL}/Makefile | make -f - osx-preferences
          \`\`\`
          
          **Individual iStat Menus Setup:**
          \`\`\`bash
          curl -fsSL ${REPO_URL}/preferences/istat-menus.sh | bash
          \`\`\`
          
          ### 🔒 Security Notes:
          - This branch contains your iStat Menus license information
          - Keep these URLs private and don't share them publicly
          - The branch will be automatically cleaned up after 7 days
          - For public sharing, use the main branch (without license)
          
          ### 📅 Branch Information:
          - **Branch:** \`${BRANCH_NAME}\`
          - **Created:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          - **Auto-cleanup:** $(date -u -d '+7 days' '+%Y-%m-%d')
          
          ### 🔄 Refresh:
          To generate a new personalized branch, re-run this GitHub Action.
          " > /tmp/usage-instructions.md
          
          # Output to GitHub Actions summary
          cat /tmp/usage-instructions.md >> $GITHUB_STEP_SUMMARY
          
          echo "✅ Setup complete! Check the Actions summary for usage instructions."